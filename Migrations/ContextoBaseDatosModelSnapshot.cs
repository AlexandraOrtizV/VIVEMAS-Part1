// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VIVEMAS.Models;

namespace VIVEMAS.Migrations
{
    [DbContext(typeof(ContextoBaseDatos))]
    partial class ContextoBaseDatosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VIVEMAS.Models.AccesoAdministrador", b =>
                {
                    b.Property<int>("Administrador_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Administrador_id");

                    b.ToTable("AccesoAdministrador");
                });

            modelBuilder.Entity("VIVEMAS.Models.AccesoUsuario", b =>
                {
                    b.Property<int>("Usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Usuario_id");

                    b.ToTable("AccesoUsuario");
                });

            modelBuilder.Entity("VIVEMAS.Models.Administrador", b =>
                {
                    b.Property<int>("Admin_id")
                        .HasColumnType("int");

                    b.Property<string>("ApMat")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ApPat")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Estado_id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_id");

                    b.HasIndex("Estado_id");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("VIVEMAS.Models.CatDiabetes", b =>
                {
                    b.Property<int>("Diabetes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Diabetes_id");

                    b.ToTable("CatDiabetes");
                });

            modelBuilder.Entity("VIVEMAS.Models.CatDificultad", b =>
                {
                    b.Property<int>("Dificultad_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Dificultad_id");

                    b.ToTable("CatDificultad");
                });

            modelBuilder.Entity("VIVEMAS.Models.CatEstado", b =>
                {
                    b.Property<int>("Estado_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Estado_id");

                    b.ToTable("CatEstado");
                });

            modelBuilder.Entity("VIVEMAS.Models.Ejercicio", b =>
                {
                    b.Property<int>("Ejercicio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dificultad_id")
                        .HasColumnType("int");

                    b.Property<string>("Equipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.Property<int>("Tipo_id")
                        .HasColumnType("int");

                    b.HasKey("Ejercicio_id");

                    b.HasIndex("Dificultad_id");

                    b.HasIndex("Tipo_id");

                    b.ToTable("Ejercicio");
                });

            modelBuilder.Entity("VIVEMAS.Models.Platillo", b =>
                {
                    b.Property<int>("Platillo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calorias")
                        .HasColumnType("int");

                    b.Property<string>("Ingredientes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Porciones")
                        .HasColumnType("int");

                    b.Property<string>("Procedimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Platillo_id");

                    b.ToTable("Platillo");
                });

            modelBuilder.Entity("VIVEMAS.Models.Rutina", b =>
                {
                    b.Property<int>("Rutina_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ejercicio_id")
                        .HasColumnType("int");

                    b.Property<int>("Platillo_id")
                        .HasColumnType("int");

                    b.HasKey("Rutina_id");

                    b.HasIndex("Ejercicio_id");

                    b.HasIndex("Platillo_id");

                    b.ToTable("Rutina");
                });

            modelBuilder.Entity("VIVEMAS.Models.TipoEjercicio", b =>
                {
                    b.Property<int>("Tipo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Tipo_id");

                    b.ToTable("TipoEjercicio");
                });

            modelBuilder.Entity("VIVEMAS.Models.Usuario", b =>
                {
                    b.Property<int>("Usuario_id")
                        .HasColumnType("int");

                    b.Property<string>("ApMat")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ApPat")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Diabetes_id")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estado_id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Rutina_id")
                        .HasColumnType("int");

                    b.HasKey("Usuario_id");

                    b.HasIndex("Diabetes_id");

                    b.HasIndex("Estado_id");

                    b.HasIndex("Rutina_id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("VIVEMAS.Models.Administrador", b =>
                {
                    b.HasOne("VIVEMAS.Models.AccesoAdministrador", "AccesoAdministrador")
                        .WithMany()
                        .HasForeignKey("Admin_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.CatEstado", "CatEstado")
                        .WithMany()
                        .HasForeignKey("Estado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VIVEMAS.Models.Ejercicio", b =>
                {
                    b.HasOne("VIVEMAS.Models.CatDificultad", "CatDificultad")
                        .WithMany()
                        .HasForeignKey("Dificultad_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.TipoEjercicio", "TipoEjercicio")
                        .WithMany()
                        .HasForeignKey("Tipo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VIVEMAS.Models.Rutina", b =>
                {
                    b.HasOne("VIVEMAS.Models.Ejercicio", "Ejercicio")
                        .WithMany()
                        .HasForeignKey("Ejercicio_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.Platillo", "Platillo")
                        .WithMany()
                        .HasForeignKey("Platillo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VIVEMAS.Models.Usuario", b =>
                {
                    b.HasOne("VIVEMAS.Models.CatDiabetes", "CatDiabetes")
                        .WithMany()
                        .HasForeignKey("Diabetes_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.CatEstado", "CatEstado")
                        .WithMany()
                        .HasForeignKey("Estado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.Rutina", "Rutina")
                        .WithMany()
                        .HasForeignKey("Rutina_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIVEMAS.Models.AccesoUsuario", "AccesoUsuario")
                        .WithMany()
                        .HasForeignKey("Usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
